% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/importData.R
\name{importDataServer}
\alias{importDataServer}
\title{Factor to character}
\usage{
importDataServer(input, output, session,
  forbidden_labels = reactive(NULL), default_tofact = FALSE,
  ui_element = "actionLink", ui_label = "Import",
  ui_icon = icon("upload"))
}
\arguments{
\item{input}{Not a real parameter, not to be set manually.}

\item{output}{Not a real parameter, not to be set manually.}

\item{session}{Not a real parameter, not to be set manually.}

\item{forbidden_labels}{Optional reactive, forbidden labels}

\item{default_tofact}{If default convert characters to factors. Default FALSE.}

\item{ui_element}{UI element to show, either "actionButton", or "actionLink". Default "actionLink".}

\item{ui_label}{Label of ui element. Default "import".}

\item{ui_icon}{Icon of ui element. Default icon("upload").}
}
\description{
Server part of module import
}
\examples{
library(shinytools)
library(shiny)

if (interactive()) {
  options(device.ask.default = FALSE)

ui <- fluidPage(
  load_jstools(),
  importDataUI(id = "id1"),
  tags$hr(),
  uiOutput("ui_SI_labels"),
  dataVizUI(id = "id2")
)

server <- function(input, output) {

  all_datasets <- reactiveValues()

  datasets <- callModule(module = importDataServer, id = "id1",
    forbidden_labels = reactive(names(reactiveValuesToList(all_datasets))))

  observeEvent(datasets$trigger, {
    req(datasets$trigger > 0)
    all_datasets[[datasets$name]] <- datasets$object
  })

  output$ui_SI_labels <- renderUI({
    x <- reactiveValuesToList(all_datasets)
    if (length(x) > 0) {
      selectInput("SI_labels", label = "Choose dataset", choices = names(x))
    }
  })

  callModule(module = dataVizServer, id = "id2",
    data = reactive({req(input$SI_labels);all_datasets[[input$SI_labels]]}))
}

  print(shinyApp(ui, server))
}
}
