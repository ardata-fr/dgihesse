% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/event.R
\name{click_event}
\alias{click_event}
\title{associate a event with an input value}
\usage{
click_event(id, event_id = paste0(id, "_event"), event_type = "click")
}
\arguments{
\item{id}{shiny input id on which click listener has been set}

\item{event_id}{reactive input to be incremented when click if fired.}
}
\description{
associate a click on an HTML element with an input value.
The name of input value is free.
}
\examples{
library(shinytools)
library(shiny)

if (interactive()) {
  options(device.ask.default = FALSE)

  ui <- fluidPage(
    titlePanel("Hello dghiesse!"),
    load_jstools(),
    sidebarLayout(
      sidebarPanel(
        div(span(id = "aspan", "click me")),
        click_event("aspan", "myclick")
      ),
      mainPanel(
        htmlOutput(outputId = "content")
      )
    )
  )

  server <- function(input, output) {
    observeEvent(input$myclick, {
      output$content <- renderUI({
        div(paste0("aspan has been clicked ",
                   input$myclick, " times"))
      })
    })
  }

  print(shinyApp(ui, server))
}
}
\seealso{
Other javascript functions: \code{\link{ability}},
  \code{\link{activate}}, \code{\link{html_class}},
  \code{\link{html_toogle}}
}
\concept{javascript functions}
